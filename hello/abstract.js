"use strict";

var Char=function()
{
	var x,w,h,n,m;
	w=arguments[0].length+2;
	h=arguments.length;
	x=[];
	n=h;
	while(n--)
	{
		m=w;
		while(m--)
		{
			if(arguments[n][m]===1)
			{
				x.push({x:m,y:h-n});
			}
		}
	}
	return x;
};

var cypher="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.!, ";

var Alphabet=[
	Char(
		[ , , , , ],
		[ ,1,1,1, ],
		[1, , , ,1],
		[1,1,1,1,1],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[ , , , , ]
	),
	Char(
		[1,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[1,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[1,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ ,1,1,1,1],
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[ ,1,1,1,1],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[1,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[1,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[1,1,1,1,1],
		[1, , , , ],
		[1, , , , ],
		[1,1,1,1, ],
		[1, , , , ],
		[1, , , , ],
		[1,1,1,1,1],
		[ , , , , ]
	),
	Char(
		[1,1,1,1,1],
		[1, , , , ],
		[1, , , , ],
		[1,1,1,1, ],
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ ,1,1,1,1],
		[1, , , , ],
		[1, , , , ],
		[1, , ,1,1],
		[1, , , ,1],
		[ ,1,1,1,1],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[1, , , ,1],
		[1, , , ,1],
		[1,1,1,1,1],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[ , , , , ]
	),
	Char(
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , , , , ]
	),
	Char(
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[1, , ,1, ],
		[ ,1,1, , ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[1, , , ,1],
		[1, , ,1, ],
		[1,1,1, , ],
		[1, ,1, , ],
		[1, , ,1, ],
		[1, , , ,1],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[1,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[1, , , ,1],
		[1,1, ,1,1],
		[1, ,1, ,1],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ , , , , ],
		[1, , , ,1],
		[1,1, , ,1],
		[1, ,1, ,1],
		[1, , ,1,1],
		[1, , , ,1],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ ,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[ ,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[1,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[1,1,1,1, ],
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ ,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[1, ,1, ,1],
		[1, , ,1, ],
		[ ,1,1, ,1],
		[ , , , , ]
	),
	Char(
		[1,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[1,1,1,1, ],
		[1, ,1, , ],
		[1, , ,1, ],
		[1, , , ,1],
		[ , , , , ]
	),
	Char(
		[ ,1,1,1, ],
		[1, , , , ],
		[1, , , , ],
		[ ,1,1,1, ],
		[ , , , ,1],
		[ , , , ,1],
		[ ,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[1,1,1,1,1],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[ ,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[1, , , ,1],
		[ ,1, ,1, ],
		[ , ,1, , ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ , , , , ],
		[1, , , ,1],
		[1, , , ,1],
		[1, ,1, ,1],
		[1, ,1, ,1],
		[ ,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[1, , , ,1],
		[1, , , ,1],
		[ ,1, ,1, ],
		[ , ,1, , ],
		[ ,1, ,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[ , , , , ]
	),
	Char(
		[1, , , ,1],
		[1, , , ,1],
		[ ,1, ,1, ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , ,1, , ],
		[ , , , , ]
	),
	Char(
		[1,1,1,1,1],
		[ , , , ,1],
		[ , , ,1, ],
		[ , ,1, , ],
		[ ,1, , , ],
		[1, , , , ],
		[1,1,1,1,1],
		[ , , , , ]
	),
	Char(
		[ ,1,1,1, ],
		[1, , , ,1],
		[1, , ,1,1],
		[1, ,1, ,1],
		[1,1, , ,1],
		[1, , , ,1],
		[ ,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[ , , ,1, ],
		[ , ,1,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , , , ]
	),
	Char(
		[ ,1,1,1, ],
		[1, , , ,1],
		[ , , ,1, ],
		[ , ,1, , ],
		[ ,1, , , ],
		[1, , , , ],
		[1,1,1,1,1],
		[ , , , , ]
	),
	Char(
		[1,1,1,1, ],
		[ , , , ,1],
		[ , , , ,1],
		[ ,1,1,1, ],
		[ , , , ,1],
		[ , , , ,1],
		[1,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[ , ,1,1, ],
		[ ,1, ,1, ],
		[1, , ,1, ],
		[1,1,1,1,1],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[1,1,1,1,1],
		[1, , , , ],
		[1,1,1,1, ],
		[ , , , ,1],
		[ , , , ,1],
		[1,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ ,1,1,1, ],
		[1, , , , ],
		[1,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[ ,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ ,1,1,1,1],
		[ , , , ,1],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , ,1, ],
		[ , , , , ]
	),
	Char(
		[ ,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[ ,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[ ,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[ ,1,1,1, ],
		[1, , , ,1],
		[1, , , ,1],
		[ ,1,1,1,1],
		[ , , , ,1],
		[ , , , ,1],
		[ ,1,1,1, ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[1,1, , , ],
		[1,1, , , ],
		[ , , , , ]
	),
	Char(
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[1, , , , ],
		[ , , , , ],
		[1, , , , ],
		[ , , , , ]
	),
	Char(
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ ,1, , , ],
		[ ,1, , , ],
		[1, , , , ]
	),
	Char(
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ , , , , ],
		[ , , , , ]
	)
];

var colors=[
	[
		[0.50,0.10,0.00,0.00],
		[0.50,0.20,0.00,0.00],
		1.8
	],
	[
		[0.50,0.10,0.00,1.00],
		[0.50,0.20,0.00,0.00],
		1.4
	],
	[
		[1.00,0.50,0.00,1.00],
		[0.00,0.50,0.00,0.00],
		0.9
	],
	[
		[0.80,0.80,0.00,1.00],
		[0.20,0.20,0.00,0.00],
		0.5
	],
	[
		[0.00,0.60,0.00,1.00],
		[0.00,0.20,0.00,0.00],
		0.3
	],
	[
		[0.10,0.70,0.00,1.00],
		[0.40,0.30,0.10,0.00],
		0
	],
];